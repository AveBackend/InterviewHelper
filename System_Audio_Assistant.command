#!/bin/bash

# –ü–æ–ª—É—á–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
cd "$DIR"

echo "üéß –°–ò–°–¢–ï–ú–ù–´–ô –ê–£–î–ò–û –ü–û–ú–û–©–ù–ò–ö"
echo "=="*35
echo "üöÄ –ó–∞–ø—É—Å–∫ Rust + Python System Audio Transcriber..."
echo ""

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é —Å—Ä–µ–¥—É
if [ -d ".venv" ]; then
    echo "üêç –ê–∫—Ç–∏–≤–∏—Ä—É—é Python virtual environment..."
    source .venv/bin/activate
else
    echo "‚ùå Virtual environment .venv –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!"
    echo "üí° –°–æ–∑–¥–∞–π—Ç–µ: python3 -m venv .venv && source .venv/bin/activate && pip install -r requirements.txt"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º BlackHole
echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é BlackHole..."
if system_profiler SPAudioDataType | grep -q "BlackHole"; then
    echo "‚úÖ BlackHole –Ω–∞–π–¥–µ–Ω"
else
    echo "‚ùå BlackHole –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: brew install blackhole-2ch"
    echo "üí° –ó–∞—Ç–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Mac"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Rust —Å–µ—Ä–≤–∏—Å
echo "üîó –ü—Ä–æ–≤–µ—Ä—è—é Rust —Å–µ—Ä–≤–∏—Å..."
if curl -s http://127.0.0.1:3030/health > /dev/null 2>&1; then
    echo "‚úÖ Rust —Å–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ö†Ô∏è Rust —Å–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–ø—É—Å–∫–∞—é..."
    # –ó–∞–ø—É—Å–∫–∞–µ–º Rust —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–µ
    cargo run --release > rust_server.log 2>&1 &
    RUST_PID=$!
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Rust —Å–µ—Ä–≤–µ—Ä–∞..."
    for i in {1..15}; do
        sleep 1
        if curl -s http://127.0.0.1:3030/health > /dev/null 2>&1; then
            echo "‚úÖ Rust —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!"
            break
        fi
        echo -n "."
    done
    
    if ! curl -s http://127.0.0.1:3030/health > /dev/null 2>&1; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Rust —Å–µ—Ä–≤–µ—Ä!"
        echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: cargo run"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞..."
        kill $RUST_PID 2>/dev/null
        exit 1
    fi
fi

echo ""
echo "üéß –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:"
echo "1. Audio MIDI Setup ‚Üí Create Multi-Output Device"
echo "2. –í–∫–ª—é—á–∏—Ç–µ: Built-in Output + BlackHole 2ch"
echo "3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Multi-Output –∫–∞–∫ —Å–∏—Å—Ç–µ–º–Ω—ã–π –≤—ã–≤–æ–¥ –∑–≤—É–∫–∞"
echo "4. –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–∏—Ç–µ –∑–≤—É–∫ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "5. –ù–∞–∂–º–∏—Ç–µ Enter –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º Python —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–µ—Ä
echo "üêç –ó–∞–ø—É—Å–∫–∞—é System Audio Transcriber..."
python system_audio_transcriber.py

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo ""
    echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
    if [ ! -z "$RUST_PID" ]; then
        kill $RUST_PID 2>/dev/null
        echo "üõë Rust —Å–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

trap cleanup EXIT
read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è..." 